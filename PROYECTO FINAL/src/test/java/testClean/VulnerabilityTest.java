package testClean;

import factoryRequest.FactoryRequest;
import factoryRequest.ResponseInformation;
import helper.GetProperties;
import io.qameta.allure.Attachment;
import io.qameta.allure.Step;
import org.json.JSONObject;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Test;

import static helper.ApiOwaspZap.*;

public class VulnerabilityTest {
    ResponseInformation response = new ResponseInformation();
    String idScan;

    @Test
    public void vulnerabilityOwaspZapTest() throws InterruptedException {
       this.startScanning();
       this.monitoringScanner();
    }

    @AfterEach
    public void generateReport(){
        response= FactoryRequest.make("get").send(String.format(GET_ALERTS,GetProperties.getInstance().getHost()),"");
        attachmentHTML("Alert List", response.getBody());
        response= FactoryRequest.make("get").send(String.format(GET_CURRENT_ATACK,idScan),"");
        attachmentHTML("Get Vulnerability List", response.getBody());
        response= FactoryRequest.make("get").send(GET_REPORT,"");
        attachmentHTML("OWASP ZAP Report - Traditional Report", response.getBody());
    }

    @Attachment(value = "{0}", type = "text/html")
    public String attachmentHTML(String nameLink, String content){
        return content;
    }


    @Step("Select and Start Scan Atack with OWASP ZAP")
    public void startScanning(){
        System.out.println(" ID >>>>>>>>>>> "+GetProperties.getInstance().getHost());
        response= FactoryRequest.make("get").send(String.format(START_SCANNER, GetProperties.getInstance().getHost()),"");
        JSONObject json= new JSONObject(response.getBody());
        idScan= json.get("scan").toString();

        System.out.println(" ID >>>>>>>>>>> "+idScan);
    }

    @Step("Monitoring the scanner -> 100%")
    public void monitoringScanner() throws InterruptedException {
        String status="0";
        do {
            response= FactoryRequest.make("get").send(String.format(MONITORING_STATUS,idScan),"");
            JSONObject json= new JSONObject(response.getBody());
            status= json.get("status").toString();
            System.out.println("INFO> scanning percentage: ["+status+"%]");
            Thread.sleep(10000);
        } while (!status.equals("100"));

    }


}
